{"version":3,"sources":["logo.svg","components/fullPage.js","components/sendCoinButton.jsx","components/ShowBalance.js","components/sendTagButton.js","components/TagList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FullPage","React","Component","props","this","scheme","className","style","background","height","width","color","minWidth","onClick","handlerr","Web3","require","coinAbi","App","state","accounts","enabled","networkId","coinContract","loading","ethereum","colorScheme","handleClick","bind","setState","loadWeb3","window","isMetaMask","console","log","networkVersion","web3","request","method","eth","Contract","on","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.60f7ed32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import SendCoinButton from \"./sendCoinButton\";\nimport ShowBalance from \"./ShowBalance\";\nimport SendTagButton from \"./sendTagButton\";\nimport TagList from \"./TagList\";\nimport React, {Component} from \"react\";\n\n\nclass FullPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if(this.props.scheme === 1) {\n            return (\n                <div className='flex-column h-screen w-full'>\n                    <div style={{background: '#DBBEA1', height: '5000px'}}\n                         className='container-fluid flex flex-column flex-wrap justify-start items-center w-full h-screen'>\n                        <div style={{background: '#DBBEA1', height: '2.5%', width: '95%'}} className='p-5 '><h2 style={{color:'#504746'}}\n                            className='  nameFont font-xs md:font-xl lg:font-2xl'> HENK VAN DER SLOOT</h2></div>\n                        <div style={{background: '#DBBEA1'}} className='flex flex-row flex-wrap justify-center w-full '>\n                            <div style={{background: '#DB7F67', height: '800px', minWidth: '450px'}}\n                                 className='p-2 h-4/5 w-3/5 shadow-4 grid m-2 grid has-2-columns has-1-rows column-gap-5 row-gap-5'>\n                                <div style={{background: '#A37B73'}} className='column-end-1 row-end-1 p-2 '>\n                                    <button onClick={this.props.handlerr}>change scheme</button>\n                                    <p></p></div>\n                                <div style={{background: '#A37B73'}} className='column-end-2 row-end-1 p-2 '><p></p>\n                                </div>\n\n                            </div>\n                            <div style={{background: '#DB7F67', height: '800px', minWidth: '250px'}}\n                                 className='w-1/5 h-4/5 shadow-4 grid m-2 '></div>\n                        </div>\n                    </div>\n\n\n                    <div style={{background: 'DarkSlateGrey', height: '15%'}}\n                         className='container-fluid flex flex-row-reverse  w-screen  '>\n                        <div className='w-full text-center flex flex-column items-center justify-center'>\n                            <h3 className='neonpurple font-xs sm:font-sm md:font-base lg:font-3xl'>Tag my Page for just\n                                1 coin! </h3>\n\n                        </div>\n\n                    </div>\n                </div>\n\n\n            )\n        }\n        else if (this.props.scheme === 2) {\n            return (\n\n                <div className='flex-column h-screen'>\n                    <div style={{background: '#C589E8', height: '5000px'}}\n                         className='container-fluid flex flex-column flex-wrap justify-start items-center w-screen h-screen'>\n                        <div style={{background: '#C589E8', height: '2.5%', width: '95%'}} className='p-5 '><h2 style={{color:'#4E8098'}}\n                            className='  nameFont font-xs md:font-xl lg:font-2xl'> HENK VAN DER SLOOT</h2></div>\n                        <div style={{background: '#C589E8'}} className='flex flex-row flex-wrap justify-center w-full '>\n                            <div style={{background: '#963D5A', height: '800px', minWidth: '450px'}}\n                                 className='p-2 h-4/5 w-3/5 shadow-4 grid m-2 grid has-2-columns has-1-rows column-gap-5 row-gap-5'>\n                                <div style={{background: '#E3DAFF'}} className='column-end-1 row-end-1 p-2 '>\n                                    <button onClick={this.props.handlerr}> change scheme </button>\n                                    <p></p></div>\n                                <div style={{background: '#E3DAFF'}} className='column-end-2 row-end-1 p-2 '><p></p>\n                                </div>\n                            </div>\n                            <div style={{background: '#963D5A', height: '800px', minWidth: '250px'}}\n                                 className='w-1/5 h-4/5 shadow-4 grid m-2 '></div>\n                        </div>\n                    </div>\n                    <div style={{background: 'DarkSlateGrey', height: '15%'}}\n                         className='container-fluid flex flex-row-reverse  w-screen  '>\n                        <div className='w-full text-center flex flex-column items-center justify-center'>\n                            <h3 className='neonpurple font-xs sm:font-sm md:font-base lg:font-3xl'>Tag my Page for just\n                                1 coin! </h3>\n                        </div>\n                    </div>\n                </div>\n\n\n            )\n        }\n\n        else if (this.props.scheme === 3) {\n            return (\n\n                <div className='flex-column h-screen'>\n                    <div style={{background: '#FCF7F8', height: '5000px'}}\n                         className='container-fluid flex flex-column flex-wrap justify-start items-center w-screen h-screen'>\n                        <div style={{background: '#FCF7F8', height: '2.5%', width: '95%'}} className='p-5 '><h2 style={{color:'#4E8098'}}\n                            className='  nameFont font-xs md:font-xl lg:font-2xl'> HENK VAN DER SLOOT</h2></div>\n                        <div style={{background: '#FCF7F8'}} className='flex flex-row flex-wrap justify-center w-full '>\n                            <div style={{background: '#A31621', height: '800px', minWidth: '450px'}}\n                                 className='p-2 h-4/5 w-3/5 shadow-4 grid m-2 grid has-2-columns has-1-rows column-gap-5 row-gap-5'>\n                                <div style={{background: '#CED3DC'}} className='column-end-1 row-end-1 p-2 '>\n                                    <button onClick={this.props.handlerr}> change scheme </button>\n                                    <p></p></div>\n                                <div style={{background: '#CED3DC'}} className='column-end-2 row-end-1 p-2 '><p></p>\n                                </div>\n                            </div>\n                            <div style={{background: '#A31621', height: '800px', minWidth: '250px'}}\n                                 className='w-1/5 h-4/5 shadow-4 grid m-2 '></div>\n                        </div>\n                    </div>\n                    <div style={{background: 'DarkSlateGrey', height: '15%'}}\n                         className='container-fluid flex flex-row-reverse  w-screen  '>\n                        <div className='w-full text-center flex flex-column items-center justify-center'>\n                            <h3 className='neonpurple font-xs sm:font-sm md:font-base lg:font-3xl'>Tag my Page for just\n                                1 coin! </h3>\n                        </div>\n                    </div>\n                </div>\n\n\n            )\n        }\n    }\n}\n\nexport default FullPage","import React from 'react';\n\n\nimport '../App.css'\n\n\n\nclass SendCoinButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleChange(event) {\n\n    }\n\n    handleClick() {\n        this.props.contract.methods.mint().send({from: this.props.account}).then ( (res,err) => {\n        })\n    }\n\n\n    render() {\n        return (\n            <div style={{float: \"left\", marginRight: \"20px\"}}>\n                <button  onClick={this.handleClick}>\n                    Mint Coin\n                </button>\n            </div>\n\n\n        );\n    }\n}\n\nSendCoinButton.propTypes = {};\n\nexport default SendCoinButton;\n","import React, {Component} from 'react';\nimport SendCoinButton from \"./sendCoinButton\";\n\n\nclass ShowBalance extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            balance: '?',\n\n        }\n    }\n\n    async loadBalance() {\n        let _balance = await this.props.contract.methods.balanceOf(this.props.account).call();\n        this.setState({balance: _balance});\n    }\n\n    async componentDidMount() {\n        this.loadBalance()\n        this.props.ethereum.on('networkChanged', async networkId => {\n            if(networkId !== 3) {\n                this.setState({balance:'?'});\n            }\n            this.loadBalance()\n        })\n    }\n\n\n    render(){\n            return(\n                <div>\n                    <p> your balance: {this.state.balance}</p>\n                </div>\n            );\n        }\n}\n\n\nexport default ShowBalance\n","import React from 'react';\nimport '../App.css'\n\nimport './tagInputStyle.css'\n\n\nclass SendTagButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tagToSend: \"..\",\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({tagToSend: event.target.value})\n    }\n\n    handleClick() {\n        this.props.contract.methods.tag(this.state.tagToSend).send({from: this.props.account }).then ( (res,err) => {\n        })\n    }\n\n\n    render() {\n\n\n        return (\n                <div>\n                <input className='effect-1'  maxlength=\"7\" placeholder='placehold' type=\"text\" name=\"title\" onChange={this.handleChange} value={this.state.tagToSend}  />\n                    <span className=\"focus-border\"></span>\n                <button  onClick={this.handleClick}>\n\n                    tag\n                </button>\n                </div>\n\n\n\n        );\n    }\n}\n\nSendTagButton.propTypes = {};\n\nexport default SendTagButton;\n","import React, {Component} from 'react';\nimport './componentStyle.css';\n\n\nclass TagList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: '',\n            loading: true,\n\n        }\n    }\n\n    async loadData() {\n        let _counter = await this.props.contract.methods.counter().call();\n\n        let tags = [];\n        for (let i = 0; i < _counter; i++) {\n            let tag = await this.props.contract.methods.tagArray(i).call()\n            tags.push(tag)\n            console.log(tags);\n        }\n        this.setState({tags: tags});\n        this.setState({loading: false});\n    }\n\n    componentDidMount() {\n        this.loadData()\n        this.props.ethereum.on('networkChanged', networkId => {\n           this.loadData()});\n\n    }\n\n    renderList() {\n        if (this.state.loading === false) {\n            return ( <ul className='noDotList neonred '>{this.state.tags.map(tag => <li className='font-xs sm:font-sm md:font-base lg:font-3xl' key={tag}> {tag} </li>)} </ul>)\n\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\n\nexport default TagList","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SendCoinButton from \"./components/sendCoinButton\";\nimport ShowBalance from \"./components/ShowBalance\";\nimport SendTagButton from \"./components/sendTagButton\";\nimport TagList from \"./components/TagList\";\nimport FullPage from \"./components/fullPage\";\n\n\n\nconst Web3 = require(\"web3\");\n\nconst coinAbi = require('./coin.json');\nconst coinAddress = '0xbF18DaD17E3fC3A200857c0065F1D5Ac50D99Ebc'\n\n\n\nclass App extends Component {\n\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      accounts: '',\n      enabled: false,\n      networkId: '',\n      coinContract: '',\n      loading: true,\n      ethereum:'',\n      colorScheme: 1,\n\n\n\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if(this.state.colorScheme < 3) {\n      this.setState({colorScheme:this.state.colorScheme + 1})\n    } else (this.setState({colorScheme:1}))\n  }\n\n  returnPage() {\n    if(this.state.colorScheme == 1) {\n      return\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    this.setState({loading:false})\n  }\n\n  async loadWeb3() {\n    let ethereum = window.ethereum;\n\n    if (ethereum.isMetaMask) {\n      console.log('wallet is Metamask!');\n      console.log(ethereum);\n    }\n\n    this.setState({ethereum:ethereum});\n\n    this.setState({networkId: ethereum.networkVersion})\n\n\n    let web3 = new Web3(ethereum);\n    console.log(web3);\n\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n    this.setState({accounts:accounts, enabled: true})\n\n    const coinContract = new web3.eth.Contract(coinAbi, coinAddress);\n    this.setState({coinContract: coinContract})\n\n    ethereum.on('networkChanged', networkId => {\n      this.setState({networkId})\n\n      console.log('network changed!')\n      console.log(ethereum.networkVersion)\n    })\n\n\n  }\n\n  returnPage(){\n    if (this.state.networkId == 3) {\n      return (\n      <div>\n        <p style={{color:'white'}} className='gFont1 font-xs sm:font-xs md:font-base lg:font-xl' > you're connected to robsten! </p>\n      </div>\n      )\n    } else {\n      return (\n          <div>\n            <p style={{color:'white'}} className='gFont1 font-xs sm:font-xs md:font-base lg:font-xl' > Please connect to robsten-network! </p>\n          </div>\n      )\n    }\n   }\n\n  render() {\n\n\n        {if(this.state.colorScheme === 1)\n    {\n      return (<FullPage handlerr={this.handleClick} scheme={1}/>)\n    } else if (this.state.colorScheme === 2) {\n          return (<FullPage handlerr={this.handleClick} scheme={2}/>)\n        }\n        else { return (<FullPage handlerr={this.handleClick} scheme={3}/>)}\n  }\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}