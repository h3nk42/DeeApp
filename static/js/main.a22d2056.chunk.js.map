{"version":3,"sources":["logo.svg","components/sendCoinButton.jsx","components/ShowBalance.js","components/sendTagButton.js","components/TagList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SendCoinButton","props","state","handleChange","bind","handleClick","event","this","contract","methods","mint","send","from","account","then","res","err","style","float","marginRight","onClick","React","Component","ShowBalance","balance","balanceOf","call","_balance","setState","loadBalance","ethereum","on","networkId","a","SendTagButton","tagToSend","target","value","tag","className","maxlength","placeholder","type","name","onChange","TagList","tags","loading","counter","_counter","i","tagArray","push","console","log","loadData","map","key","renderList","Web3","require","coinAbi","App","accounts","enabled","coinContract","loadWeb3","window","isMetaMask","networkVersion","web3","request","method","eth","Contract","color","background","height","returnPage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,skKC2C5BC,E,kDAnCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAGb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAPJ,E,yDAUNE,M,oCAKTC,KAAKN,MAAMO,SAASC,QAAQC,OAAOC,KAAK,CAACC,KAAML,KAAKN,MAAMY,UAAUC,MAAO,SAACC,EAAIC,S,+BAMhF,OACI,yBAAKC,MAAO,CAACC,MAAO,OAAQC,YAAa,SACrC,4BAASC,QAASb,KAAKF,aAAvB,kB,GAxBagB,IAAMC,WCiCpBC,E,kDAlCX,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTsB,QAAS,KAHE,E,0LASMjB,KAAKN,MAAMO,SAASC,QAAQgB,UAAUlB,KAAKN,MAAMY,SAASa,O,OAA3EC,E,OACJpB,KAAKqB,SAAS,CAACJ,QAASG,I,qQAIxBpB,KAAKsB,cACLtB,KAAKN,MAAM6B,SAASC,GAAG,iBAAvB,uCAAyC,WAAMC,GAAN,SAAAC,EAAA,sDACpB,IAAdD,GACC,EAAKJ,SAAS,CAACJ,QAAQ,MAE3B,EAAKK,cAJgC,2CAAzC,kCAAAtB,KAAA,gB,qIAUI,OACI,6BACI,6CAAmBA,KAAKL,MAAMsB,c,GA7BxBF,aC6CXY,G,yDA1CX,WAAYjC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTiC,UAAW,MAGf,EAAKhC,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBARJ,E,yDAWNE,GACTC,KAAKqB,SAAS,CAACO,UAAW7B,EAAM8B,OAAOC,U,oCAIvC9B,KAAKN,MAAMO,SAASC,QAAQ6B,IAAI/B,KAAKL,MAAMiC,WAAWxB,KAAK,CAACC,KAAML,KAAKN,MAAMY,UAAWC,MAAO,SAACC,EAAIC,S,+BAQpG,OACQ,6BACA,2BAAOuB,UAAU,WAAYC,UAAU,IAAIC,YAAY,YAAYC,KAAK,OAAOC,KAAK,QAAQC,SAAUrC,KAAKJ,aAAckC,MAAO9B,KAAKL,MAAMiC,YACvI,0BAAMI,UAAU,iBACpB,4BAASnB,QAASb,KAAKF,aAAvB,Y,GA7BYgB,IAAMC,YCgDnBuB,G,yDAhDX,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT4C,KAAM,GACNC,SAAS,GAJE,E,6LAUMxC,KAAKN,MAAMO,SAASC,QAAQuC,UAAUtB,O,OAAvDuB,E,OAEAH,EAAO,GACFI,EAAI,E,YAAGA,EAAID,G,iCACA1C,KAAKN,MAAMO,SAASC,QAAQ0C,SAASD,GAAGxB,O,OAApDY,E,OACJQ,EAAKM,KAAKd,GACVe,QAAQC,IAAIR,G,QAHcI,I,uBAK9B3C,KAAKqB,SAAS,CAACkB,KAAMA,IACrBvC,KAAKqB,SAAS,CAACmB,SAAS,I,iJAGP,IAAD,OAChBxC,KAAKgD,WACLhD,KAAKN,MAAM6B,SAASC,GAAG,kBAAkB,SAAAC,GACtC,EAAKuB,gB,mCAKR,IAA2B,IAAvBhD,KAAKL,MAAM6C,QACX,OAAS,wBAAIR,UAAU,sBAAsBhC,KAAKL,MAAM4C,KAAKU,KAAI,SAAAlB,GAAG,OAAI,wBAAIC,UAAU,8CAA8CkB,IAAKnB,GAAjE,IAAwEA,EAAxE,QAA/D,O,+BAQb,OACI,6BACK/B,KAAKmD,kB,GA3CApC,cCMhBqC,EAAOC,EAAQ,KAEfC,EAAUD,EAAQ,KA+LTE,E,kDAvLb,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX6D,SAAU,GACVC,SAAS,EACThC,UAAW,GACXiC,aAAc,GACdlB,SAAS,EACTjB,SAAS,IARM,E,0LAgBXvB,KAAK2D,W,OACX3D,KAAKqB,SAAS,CAACmB,SAAQ,I,2QAInBjB,EAAWqC,OAAOrC,UAETsC,aACXf,QAAQC,IAAI,uBACZD,QAAQC,IAAIxB,IAGdvB,KAAKqB,SAAS,CAACE,SAASA,IAExBvB,KAAKqB,SAAS,CAACI,UAAWF,EAASuC,iBAG/BC,EAAO,IAAIX,EAAK7B,GACpBuB,QAAQC,IAAIgB,G,SAEWxC,EAASyC,QAAQ,CAAEC,OAAQ,wB,OAA5CT,E,OACNxD,KAAKqB,SAAS,CAACmC,SAASA,EAAUC,SAAS,IAErCC,EAAe,IAAIK,EAAKG,IAAIC,SAASb,EA9C3B,8CA+ChBtD,KAAKqB,SAAS,CAACqC,aAAcA,IAE7BnC,EAASC,GAAG,kBAAkB,SAAAC,GAC5B,EAAKJ,SAAS,CAACI,cAEfqB,QAAQC,IAAI,oBACZD,QAAQC,IAAIxB,EAASuC,mB,0IAOvB,OAA4B,GAAxB9D,KAAKL,MAAM8B,UAEb,6BACE,uBAAGf,MAAO,CAAC0D,MAAM,SAAUpC,UAAU,qDAArC,mCAKE,6BACE,uBAAGtB,MAAO,CAAC0D,MAAM,SAAUpC,UAAU,qDAArC,2C,+BAOR,OACI,yBAAKA,UAAU,wBACf,yBAAKtB,MAAO,CAAC2D,WAAW,gBAAiBC,OAAO,OAAQtC,UAAU,qDAChE,yBAAKA,UAAU,mEACb,wBAAIA,UAAU,0DAAd,mCAKF,yBAAKtB,MAAO,CAAC2D,WAAW,iBAAkBrC,UAAU,kDAClD,yBAAKA,UAAU,kDACb,8BACyB,IAAvBhC,KAAKL,MAAM8D,QACb,uBAAG/C,MAAO,CAAC0D,MAAM,SAAUpC,UAAU,qDAArC,mFAEE,uBAAGtB,MAAO,CAAC0D,MAAM,SAAUpC,UAAU,qDAArC,gCAGJ,yBAAKA,UAAU,gBACZhC,KAAKuE,cAEN,yBAAKvC,UAAU,6DACU,GAAtBhC,KAAKL,MAAM6C,QACR,yBAAKR,UAAU,iCACf,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAgB/B,SAAUD,KAAKL,MAAM+D,aAAcpD,QAASN,KAAKL,MAAM6D,SAAS,MAEhF,yBAAK9C,MAAO,CAAC0D,MAAM,SAAUpC,UAAU,mEACrC,kBAAC,EAAD,CAAaT,SAAUvB,KAAKL,MAAM4B,SAAUtB,SAAUD,KAAKL,MAAM+D,aAAcpD,QAASN,KAAKL,MAAM6D,SAAS,MAE9G,6BACE,kBAAC,EAAD,CAAejC,SAAUvB,KAAKL,MAAM4B,SAAUtB,SAAUD,KAAKL,MAAM+D,aAAcpD,QAASN,KAAKL,MAAM6D,SAAS,OAIlH,yCAMV,yBAAKxB,UAAU,uBACb,wBAAIA,UAAU,uBAAd,UACuB,GAAtBhC,KAAKL,MAAM6C,QACR,yBAAKR,UAAU,aAEb,kBAAC,EAAD,CAAST,SAAUvB,KAAKL,MAAM4B,SAAUtB,SAAUD,KAAKL,MAAM+D,aAAcpD,QAASN,KAAKL,MAAM6D,SAAS,MAG1G,0CAMN,yBAAK9C,MAAO,CAAC2D,WAAW,aAAcrC,UAAU,oEAC9C,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,sB,GArITjB,aCLEyD,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5E,MAAK,SAAA6E,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzC,QAAQyC,MAAMA,EAAMC,a","file":"static/js/main.a22d2056.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n\nimport '../App.css'\n\n\n\nclass SendCoinButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleChange(event) {\n\n    }\n\n    handleClick() {\n        this.props.contract.methods.mint().send({from: this.props.account}).then ( (res,err) => {\n        })\n    }\n\n\n    render() {\n        return (\n            <div style={{float: \"left\", marginRight: \"20px\"}}>\n                <button  onClick={this.handleClick}>\n                    Mint Coin\n                </button>\n            </div>\n\n\n        );\n    }\n}\n\nSendCoinButton.propTypes = {};\n\nexport default SendCoinButton;\n","import React, {Component} from 'react';\nimport SendCoinButton from \"./sendCoinButton\";\n\n\nclass ShowBalance extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            balance: '?',\n\n        }\n    }\n\n    async loadBalance() {\n        let _balance = await this.props.contract.methods.balanceOf(this.props.account).call();\n        this.setState({balance: _balance});\n    }\n\n    async componentDidMount() {\n        this.loadBalance()\n        this.props.ethereum.on('networkChanged', async networkId => {\n            if(networkId !== 3) {\n                this.setState({balance:'?'});\n            }\n            this.loadBalance()\n        })\n    }\n\n\n    render(){\n            return(\n                <div>\n                    <p> your balance: {this.state.balance}</p>\n                </div>\n            );\n        }\n}\n\n\nexport default ShowBalance\n","import React from 'react';\nimport '../App.css'\n\nimport './tagInputStyle.css'\n\n\nclass SendTagButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tagToSend: \"..\",\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({tagToSend: event.target.value})\n    }\n\n    handleClick() {\n        this.props.contract.methods.tag(this.state.tagToSend).send({from: this.props.account }).then ( (res,err) => {\n        })\n    }\n\n\n    render() {\n\n\n        return (\n                <div>\n                <input className='effect-1'  maxlength=\"7\" placeholder='placehold' type=\"text\" name=\"title\" onChange={this.handleChange} value={this.state.tagToSend}  />\n                    <span className=\"focus-border\"></span>\n                <button  onClick={this.handleClick}>\n\n                    tag\n                </button>\n                </div>\n\n\n\n        );\n    }\n}\n\nSendTagButton.propTypes = {};\n\nexport default SendTagButton;\n","import React, {Component} from 'react';\nimport './componentStyle.css';\n\n\nclass TagList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: '',\n            loading: true,\n\n        }\n    }\n\n    async loadData() {\n        let _counter = await this.props.contract.methods.counter().call();\n\n        let tags = [];\n        for (let i = 0; i < _counter; i++) {\n            let tag = await this.props.contract.methods.tagArray(i).call()\n            tags.push(tag)\n            console.log(tags);\n        }\n        this.setState({tags: tags});\n        this.setState({loading: false});\n    }\n\n    componentDidMount() {\n        this.loadData()\n        this.props.ethereum.on('networkChanged', networkId => {\n           this.loadData()});\n\n    }\n\n    renderList() {\n        if (this.state.loading === false) {\n            return ( <ul className='noDotList neonred '>{this.state.tags.map(tag => <li className='font-xs sm:font-sm md:font-base lg:font-3xl' key={tag}> {tag} </li>)} </ul>)\n\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\n\nexport default TagList","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SendCoinButton from \"./components/sendCoinButton\";\nimport ShowBalance from \"./components/ShowBalance\";\nimport SendTagButton from \"./components/sendTagButton\";\nimport TagList from \"./components/TagList\";\n\n\n\nconst Web3 = require(\"web3\");\n\nconst coinAbi = require('./coin.json');\nconst coinAddress = '0xbF18DaD17E3fC3A200857c0065F1D5Ac50D99Ebc'\n\n\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      accounts: '',\n      enabled: false,\n      networkId: '',\n      coinContract: '',\n      loading: true,\n      ethereum:'',\n\n\n\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    this.setState({loading:false})\n  }\n\n  async loadWeb3() {\n    let ethereum = window.ethereum;\n\n    if (ethereum.isMetaMask) {\n      console.log('wallet is Metamask!');\n      console.log(ethereum);\n    }\n\n    this.setState({ethereum:ethereum});\n\n    this.setState({networkId: ethereum.networkVersion})\n\n\n    let web3 = new Web3(ethereum);\n    console.log(web3);\n\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n    this.setState({accounts:accounts, enabled: true})\n\n    const coinContract = new web3.eth.Contract(coinAbi, coinAddress);\n    this.setState({coinContract: coinContract})\n\n    ethereum.on('networkChanged', networkId => {\n      this.setState({networkId})\n\n      console.log('network changed!')\n      console.log(ethereum.networkVersion)\n    })\n\n\n  }\n\n  returnPage(){\n    if (this.state.networkId == 3) {\n      return (\n      <div>\n        <p style={{color:'white'}} className='gFont1 font-xs sm:font-xs md:font-base lg:font-xl' > you're connected to robsten! </p>\n      </div>\n      )\n    } else {\n      return (\n          <div>\n            <p style={{color:'white'}} className='gFont1 font-xs sm:font-xs md:font-base lg:font-xl' > Please connect to robsten-network! </p>\n          </div>\n      )\n    }\n   }\n\n  render() {\n    return (\n        <div className='flex-column h-screen'>\n        <div style={{background:'DarkSlateGrey', height:'15%'}} className='container-fluid flex flex-row-reverse  w-screen  '>\n          <div className='w-full text-center flex flex-column items-center justify-center'>\n            <h3 className='neonpurple font-xs sm:font-sm md:font-base lg:font-3xl'>Tag my Page for just 1 coin! </h3>\n\n          </div>\n\n        </div>\n          <div style={{background:'DarkSlateGrey'}} className='container-fluid flex flex-row  w-screen h-3/4 '>\n            <div className='w-2/5 h-full  text-center p-2 flex flex-column'>\n              <div>\n              { this.state.enabled === false ?\n              <p style={{color:'white'}} className='gFont1 font-xs sm:font-xs md:font-base lg:font-xl'> If you want to put your name on the wall, you'll need to connect your wallet! </p>\n                :\n                <p style={{color:'white'}} className='gFont1 font-xs sm:font-xs md:font-base lg:font-xl'> Your wallet is connected! </p>\n                }\n              </div>\n            <div className='pt-2 sm:pt-5'>\n              {this.returnPage()}\n            </div>\n              <div className='flex flex-column items-center justify-center pt-2 sm:pt-5'>\n                {this.state.loading == false ?\n                    <div className='flex flex-column items-center'>\n                    <div className=' font-xs sm:font-xs'>\n                      <SendCoinButton contract={this.state.coinContract} account={this.state.accounts[0]}></SendCoinButton>\n                    </div>\n                      <div style={{color:'white'}} className=' gFont1 font-xs sm:font-xs md:font-base lg:font-xl pt-2 sm:pt-5'>\n                        <ShowBalance ethereum={this.state.ethereum} contract={this.state.coinContract} account={this.state.accounts[0]}></ShowBalance>\n                      </div>\n                      <div>\n                        <SendTagButton ethereum={this.state.ethereum} contract={this.state.coinContract} account={this.state.accounts[0]}></SendTagButton>\n                      </div>\n                    </div>\n                    :\n                    <p>loading </p>}\n\n              </div>\n\n\n            </div>\n          <div className='w-full h-full   p-2'>\n            <h5 className='neonred text-center'> HENK </h5>\n            {this.state.loading == false ?\n                <div className='  wrapper'>\n\n                  <TagList ethereum={this.state.ethereum} contract={this.state.coinContract} account={this.state.accounts[0]} ></TagList>\n                </div>\n                :\n                <p> loading </p>}\n\n          </div>\n          </div>\n\n\n          <div style={{background:'LightPink'}} className='container-fluid border w-screen h-screen flex-wrap flex flex-row'>\n            <div className='w-1/2 h-1/2'></div>\n            <div className='w-1/2 h-1/2'></div>\n            <div className='w-1/4 h-1/2'></div>\n            <div className='w-1/4 h-1/2'></div>\n            <div className='w-1/4 h-1/2'></div>\n            <div className='w-1/4 h-1/2'></div>\n          </div>\n        </div>\n\n        /*\n        <div className=\"App\">\n          <h1 className='md:font-2xl lg:font-5xl'> 5xl </h1>\n          <h1 className='md:font-2xl lg:font-4xl'> 4xl </h1>\n          <h1 className='md:font-2xl lg:font-3xl'> 3xl </h1>\n          <h1 className='md:font-2xl lg:font-2xl'> 2xl </h1>\n          <h1 className='md:font-2xl lg:font-xl'> xl </h1>\n          <h1 className='md:font-2xl lg:font-lg'> lg </h1>\n          <h1 className='md:font-2xl lg:font-base'> base </h1>\n          <h1 className='md:font-2xl lg:font-sm'> sm </h1>\n          <h1 className='md:font-2xl lg:font-xs'> xs </h1>\n\n          <header className=\"App-header\">\n            <div className='Title'>\n              <h3 className='neonpurple font-xs sm:font-sm md:font-base lg:font-3xl'>Tag my Page for just 1 coin! </h3>\n            </div>\n            <div className='body'>\n              <div className='left'>\n              {this.returnPage()}\n                {this.state.loading == false ?\n                    <div className='wrapper'>\n                      <SendCoinButton contract={this.state.coinContract} account={this.state.accounts[0]}></SendCoinButton>\n                      <ShowBalance ethereum={this.state.ethereum} contract={this.state.coinContract} account={this.state.accounts[0]}></ShowBalance>\n                      <SendTagButton ethereum={this.state.ethereum} contract={this.state.coinContract} account={this.state.accounts[0]}></SendTagButton>\n                      </div>\n                :\n                <p>loading </p>}\n\n              </div>\n              <div className='right container'>\n                {this.state.loading == false ?\n                    <div className='wrapper'>\n                      <TagList ethereum={this.state.ethereum} contract={this.state.coinContract} account={this.state.accounts[0]} ></TagList>\n\n                    </div>\n                    :\n                    <p>loading </p>}\n\n\n              </div>\n            </div>\n          </header>\n        </div>\n\n         */\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}