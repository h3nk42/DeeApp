{"version":3,"sources":["henkShot2.png","logo.svg","components/sendCoinButton.jsx","components/ShowBalance.js","components/sendTagButton.js","components/TagList.js","components/fullPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","FullPage","props","this","scheme","className","style","background","returnColor","height","minHeight","width","color","minWidth","Button","outline","onClick","handlerr","src","henk","contentStyle","contentArrowStyle","borderRight","concat","date","iconStyle","Web3","require","coinAbi","App","state","accounts","enabled","networkId","coinContract","loading","ethereum","colorScheme","handleClick","bind","setState","loadWeb3","window","isMetaMask","console","log","networkVersion","web3","request","method","eth","Contract","on","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.67c5f05a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/henkShot2.aa837ea9.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n\nimport '../App.css'\n\n\n\nclass SendCoinButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleChange(event) {\n\n    }\n\n    handleClick() {\n        this.props.contract.methods.mint().send({from: this.props.account}).then ( (res,err) => {\n        })\n    }\n\n\n    render() {\n        return (\n            <div style={{float: \"left\", marginRight: \"20px\"}}>\n                <button  onClick={this.handleClick}>\n                    Mint Coin\n                </button>\n            </div>\n\n\n        );\n    }\n}\n\nSendCoinButton.propTypes = {};\n\nexport default SendCoinButton;\n","import React, {Component} from 'react';\nimport SendCoinButton from \"./sendCoinButton\";\n\n\nclass ShowBalance extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            balance: '?',\n\n        }\n    }\n\n    async loadBalance() {\n        let _balance = await this.props.contract.methods.balanceOf(this.props.account).call();\n        this.setState({balance: _balance});\n    }\n\n    async componentDidMount() {\n        this.loadBalance()\n        this.props.ethereum.on('networkChanged', async networkId => {\n            if(networkId !== 3) {\n                this.setState({balance:'?'});\n            }\n            this.loadBalance()\n        })\n    }\n\n\n    render(){\n            return(\n                <div>\n                    <p> your balance: {this.state.balance}</p>\n                </div>\n            );\n        }\n}\n\n\nexport default ShowBalance\n","import React from 'react';\nimport '../App.css'\n\nimport './tagInputStyle.css'\n\n\nclass SendTagButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tagToSend: \"..\",\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({tagToSend: event.target.value})\n    }\n\n    handleClick() {\n        this.props.contract.methods.tag(this.state.tagToSend).send({from: this.props.account }).then ( (res,err) => {\n        })\n    }\n\n\n    render() {\n\n\n        return (\n                <div>\n                <input className='effect-1'  maxlength=\"7\" placeholder='placehold' type=\"text\" name=\"title\" onChange={this.handleChange} value={this.state.tagToSend}  />\n                    <span className=\"focus-border\"></span>\n                <button  onClick={this.handleClick}>\n\n                    tag\n                </button>\n                </div>\n\n\n\n        );\n    }\n}\n\nSendTagButton.propTypes = {};\n\nexport default SendTagButton;\n","import React, {Component} from 'react';\nimport './componentStyle.css';\n\n\nclass TagList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: '',\n            loading: true,\n\n        }\n    }\n\n    async loadData() {\n        let _counter = await this.props.contract.methods.counter().call();\n\n        let tags = [];\n        for (let i = 0; i < _counter; i++) {\n            let tag = await this.props.contract.methods.tagArray(i).call()\n            tags.push(tag)\n            console.log(tags);\n        }\n        this.setState({tags: tags});\n        this.setState({loading: false});\n    }\n\n    componentDidMount() {\n        this.loadData()\n        this.props.ethereum.on('networkChanged', networkId => {\n           this.loadData()});\n\n    }\n\n    renderList() {\n        if (this.state.loading === false) {\n            return ( <ul className='noDotList neonred '>{this.state.tags.map(tag => <li className='font-xs sm:font-sm md:font-base lg:font-3xl' key={tag}> {tag} </li>)} </ul>)\n\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\n\nexport default TagList","import SendCoinButton from \"./sendCoinButton\";\nimport ShowBalance from \"./ShowBalance\";\nimport SendTagButton from \"./sendTagButton\";\nimport TagList from \"./TagList\";\nimport React, {Component} from \"react\";\nimport {MDCRipple} from '@material/ripple';\nimport {Button} from '@material-ui/core'\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n\nimport henk from '../henkShot2.png'\n\nimport '../App.css'\n\n\nclass FullPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    returnColor() {\n        if (this.props.scheme === 3) {\n            return ['#DBBEA1','#DB7F67','#A37B73','#504746', 'black']\n        } else if (this.props.scheme === 2) {\n            return ['#E7ECEF','#274C77','#6096BA','#504746','#E7ECEF']\n        } else {\n            return  (['#FFAA00','#FF5400','#FF7900','#FF4800', 'black'] )\n        }\n    }\n\n    render() {\n            return (\n                <div className='flex-column h-screen w-screen'>\n                    <div style={{background: this.returnColor()[0], height: '5000px'}}\n                         className='container-fluid flex flex-column flex-wrap justify-start items-center w-auto h-screen'>\n                        <div style={{background: this.returnColor()[0], height: '1.5%', minHeight: '50px', width: '95%'}} className=' p-2 mb-1 sm:mb-5'><h2 style={{color:this.returnColor()[3]}}\n                            className='fromRight nameFont font-xs md:font-xl lg:font-2xl'> HENK VAN DER SLOOT</h2></div>\n                        <div style={{background: this.returnColor()[0]}} className='flex flex-row flex-wrap justify-center w-full '>\n                            <div style={{background: this.returnColor()[1], height: '400px', minHeight: '200px', minWidth: '350px'}}\n                                 className=' mb-2 p-2 w-3/5 shadow-4 grid grid has-6-columns has-6-rows column-gap-5 row-gap-5'>\n                                <div style={{background: this.returnColor()[1]}} className='column-start-3 column-end-6 row-start-6 flex items-end justify-end'>\n                                    <Button style={{outline:'none'}} className='mdc-button' onClick={this.props.handlerr}>\n                                        <div className=\"mdc-button__ripple\"></div>\n                                        <span className=\"mdc-button__label nameFont font-xs\">change scheme</span>\n                                    </Button>\n                                    </div>\n                                <div className='textFont column-start-1 column-end-6 row-start-1 row-end-5'>\n                                    <p style={{color:this.returnColor()[4]}} className=' font-xs sm:font-xs md:font-base lg:font-xl'>I'm a software engineer studying applied computer science at HTW Berlin. In 2019 I started working with Ethereum and Smart Contracts which immediately sparked my\n                                        interests in making the world a more decentralized space.\n                                    </p>\n                                </div>\n                                <div style={{background:'black'}} className='button2 w-full h-full'></div>\n                            </div>\n                            <div style={{background: this.returnColor()[1], height: 'auto', minWidth: '250px'}}\n                                 className='w-1/5 h-4/5 shadow-4 ml-2 grid p-2 fromRight'>\n                                <img src={henk}></img>\n                                {/*<p style={{color:this.returnColor()[4]}} className='font-xs sm:font-xs'> Lorem ipsum dolor sit amet, consetetur sadipscing elitr,\n                                    sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat,\n                                    sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\n                                </p>*/}\n                            </div>\n\n                        </div>\n                        <div style={{height:'7%'}}className=' w-full border'>\n\n                        </div>\n                        <div className=''>\n                        <VerticalTimeline>\n                            <VerticalTimelineElement\n                                className=\"vertical-timeline-element\"\n                                contentStyle={{background: this.returnColor()[1], color: 'black' }}\n                                contentArrowStyle={{ borderRight: '20px solid '.concat(this.returnColor()[1])}}\n                                date=\"2018 - 2020\"\n                                iconStyle={{ background: this.returnColor()[3], color: this.returnColor()[4] }}\n                            >\n                                <h3 style={{color:this.returnColor()[4]}} className=\"vertical-timeline-element-title\">Informatik Bsc.</h3>\n                                <h4 style={{color:this.returnColor()[4]}} className=\"vertical-timeline-element-subtitle\">Uni Leipzig</h4>\n                                <p style={{color:this.returnColor()[4]}}>\n                                </p>\n                            </VerticalTimelineElement>\n                            <VerticalTimelineElement\n                                className=\"vertical-timeline-element\"\n                                contentStyle={{background: this.returnColor()[1], color:'black' }}\n                                contentArrowStyle={{ borderRight: '20px solid '.concat(this.returnColor()[1])}}\n                                date=\"2019 - 2020\"\n                                iconStyle={{ background: this.returnColor()[3], color: this.returnColor()[4] }}\n                            >\n                                <h3 style={{color:this.returnColor()[4]}} className=\"vertical-timeline-element-title\">Software Engineer</h3>\n                                <h4 style={{color:this.returnColor()[4]}} className=\"vertical-timeline-element-subtitle\">Exxeta GmbH, Leipzig</h4>\n                                <p style={{color:this.returnColor()[4]}}>\n                                    Werkstudent, eigenes Projekt: Ethereum, Smart-Contracts, React, NodeJS\n                                </p>\n                            </VerticalTimelineElement>\n                            <VerticalTimelineElement\n                                className=\"vertical-timeline-element\"\n                                contentStyle={{background: this.returnColor()[1], color:'black' }}\n                                contentArrowStyle={{ borderRight: '20px solid '.concat(this.returnColor()[1])}}\n                                date=\"2020 - present\"\n                                iconStyle={{ background: this.returnColor()[3], color: this.returnColor()[4]}}\n                            >\n                                <h3 style={{color:this.returnColor()[4]}} className=\"vertical-timeline-element-title\">angewandte Info.</h3>\n                                <h4 style={{color:this.returnColor()[4]}} className=\"vertical-timeline-element-subtitle\">HTW Berlin</h4>\n                                <p style={{color:this.returnColor()[4]}}> Bachelor fertig stellen\n                                </p>\n                            </VerticalTimelineElement>\n                        </VerticalTimeline>\n                        </div>\n                    </div>\n                </div>\n\n\n            )\n\n\n\n\n\n    }\n}\n\nexport default FullPage","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SendCoinButton from \"./components/sendCoinButton\";\nimport ShowBalance from \"./components/ShowBalance\";\nimport SendTagButton from \"./components/sendTagButton\";\nimport TagList from \"./components/TagList\";\nimport FullPage from \"./components/fullPage\";\n\n\n\nconst Web3 = require(\"web3\");\n\nconst coinAbi = require('./coin.json');\nconst coinAddress = '0xbF18DaD17E3fC3A200857c0065F1D5Ac50D99Ebc'\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      accounts: '',\n      enabled: false,\n      networkId: '',\n      coinContract: '',\n      loading: true,\n      ethereum:'',\n      colorScheme: 1,\n\n\n\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    if(this.state.colorScheme < 3) {\n      this.setState({colorScheme:this.state.colorScheme + 1})\n    } else (this.setState({colorScheme:1}))\n  }\n\n  returnPage() {\n    if(this.state.colorScheme == 1) {\n      return\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    this.setState({loading:false})\n  }\n\n  async loadWeb3() {\n\n    if (window.ethereum) {\n\n\n      let ethereum = window.ethereum;\n\n      if (ethereum.isMetaMask) {\n        console.log('wallet is Metamask!');\n        console.log(ethereum);\n      }\n\n      this.setState({ethereum: ethereum});\n\n      this.setState({networkId: ethereum.networkVersion})\n\n\n      let web3 = new Web3(ethereum);\n      console.log(web3);\n\n      const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n      this.setState({accounts: accounts, enabled: true})\n\n      const coinContract = new web3.eth.Contract(coinAbi, coinAddress);\n      this.setState({coinContract: coinContract})\n\n      ethereum.on('networkChanged', networkId => {\n        this.setState({networkId})\n\n        console.log('network changed!')\n        console.log(ethereum.networkVersion)\n      })\n\n    }\n  }\n\n  returnPage(){\n    if (this.state.networkId == 3) {\n      return (\n      <div>\n        <p style={{color:'white'}} className='gFont1 font-xs sm:font-xs md:font-base lg:font-xl' > you're connected to robsten! </p>\n      </div>\n      )\n    } else {\n      return (\n          <div>\n            <p style={{color:'white'}} className='gFont1 font-xs sm:font-xs md:font-base lg:font-xl' > Please connect to robsten-network! </p>\n          </div>\n      )\n    }\n   }\n\n  render() {\n        {if(this.state.colorScheme === 1)\n    {\n      return (<FullPage handlerr={this.handleClick} scheme={1}/>)\n    } else if (this.state.colorScheme === 2) {\n          return (<FullPage handlerr={this.handleClick} scheme={2}/>)\n        }\n        else { return (<FullPage handlerr={this.handleClick} scheme={3}/>)}\n  }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}